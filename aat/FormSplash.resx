<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAeAAAAEsCAIAAACUnPcNAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4zjOaXUAAAGnRJREFUeF7t3QuQ
        HVWdx/F7JzEEIcKi66vQZUURFEoXA4RkZjLBIJBlQQVUqPgKqFALQlyiKCirSIngqrySEGbuTEjCMxhA
        npsgzwCKooXuUq6rrlIuIK9MWNet2qp1v3fO0On0fUxPSPDPzZf6VKqnb3ef06f7/M7pnhtSGf7TDyVJ
        ARnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSU
        AS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQ
        khSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1J
        QRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSU
        AS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQ
        khSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1J
        QRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSU
        AS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQ
        khSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1J
        QRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSU
        AS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQ
        khSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1J
        QRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSU
        AS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQkhSUAS1JQRnQ
        khSUAS1JQRnQkhSUAS1pU6z7vwcLa7TZGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlB
        GdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQB
        LUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCS
        FJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlB
        GdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQBLUlBGdCSFJQB
        LUlBGdCSFJQBrVFPPPCVJ753/JM3H/mftxzzxJpP/vrh5Q//ZPnPf/vjwmaSXjQG9FbtsTvnP3bTkU9d
        N/vxq/Z5+sqpT14z44lre5+45ehn7z75D6vn/tcthz+z+qOFXSS9aAzorc7jdy14etk7hhdPXr+wOryw
        sn5RUn1eZRgLq+surg5fPPHpm95f2F3Si8aA3lr84s4F64beuG7Ry+q5PBLEmec2lq0fvmjbX/3syrT7
        W6/54NG3fzE7mqQXgQHd+X73g7PXn7/t+kVdaYL8vNH58nOLqwX1aF5YWbdowrMru7ODTOjfPy3MueUz
        2UpJW5QB3eGeWLHn8EVd6xfmJ8jV9Q2hPGLD9JmAfvbq6fnjHHrzp9PChCX7Ta71ZuslbTkGdAf6zV2n
        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
        YII=
</value>
  </data>
</root>